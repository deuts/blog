<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Wordpress on Deuts Log</title>
    <link>https://deuts.org/a/wordpress/</link>
    <description>Recent content in Wordpress on Deuts Log</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <copyright>2024 Deuts Log</copyright>
    <lastBuildDate>Tue, 19 Nov 2024 17:55:00 +0800</lastBuildDate>
    <atom:link href="https://deuts.org/a/wordpress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring Google Analytics Alternatives: Why I Chose Medama</title>
      <link>https://deuts.org/p/medama-vs-google-analytics/</link>
      <pubDate>Tue, 19 Nov 2024 17:55:00 +0800</pubDate>
      <guid>https://deuts.org/p/medama-vs-google-analytics/</guid>
      <description>Looking for a Google Analytics alternative, I explored several options and ultimately settled on Medama for its simplicity, lightweight nature, and ease of use. It provides essential insights without the complexity of other analytics tools.</description>
      <content:encoded><![CDATA[<p>I was recently browsing through <a href="https://selfh.st/apps/?alternative=Google+Analytics">selfh.st</a> looking for a Google Analytics alternative for my public websites. I wanted something that would give me the basic insights I need, without being bloated or overly complicated. After narrowing it down, I ended up considering three options: Umami, Matomo, and Medama.</p>
<h3 id="why-im-moving-away-from-google-analytics">Why I&rsquo;m Moving Away from Google Analytics</h3>
<p>Before we jump into the alternatives, let me first explain why I’m steering clear of Google Analytics—because sometimes, less is more!</p>
<ul>
<li>
<p><strong>Self-Hosted Simplicity</strong>: Google Analytics, while powerful, requires an external service and complex integration. I prefer a self-hosted solution where I have full control over my data, without relying on third-party providers.</p>
</li>
<li>
<p><strong>Google Analytics is Hard to Navigate</strong>: I’ve always found Google Analytics difficult to navigate, especially when looking for specific insights. The overwhelming number of features and menus can make it hard to pinpoint exactly what I want without wading through unnecessary options.</p>
</li>
<li>
<p><strong>Privacy Concerns</strong>: While it’s not always discussed openly, Google Analytics sometimes includes tracking scripts that could be seen as invasive. With data collection practices that tie into Google&rsquo;s wider ecosystem, it could potentially compromise user privacy in ways that I don’t fully control. For example, data shared with Google can be used for advertising purposes, which might not align with my privacy policies.</p>
</li>
<li>
<p><strong>Excessive Complexity for Basic Needs</strong>: For most of my websites, I don&rsquo;t need detailed reports or a high level of tracking. I just want to know which pages are visited, where my traffic is coming from, and what devices or browsers visitors are using. Google Analytics can do this, but it requires navigating through complex dashboards and reports that are too advanced for my simple needs.</p>
</li>
</ul>
<h3 id="umami-great-but-not-without-issues">Umami: Great but Not Without Issues</h3>
<p>I’ve tried <strong>Umami</strong> before and had some issues with it. When I upgraded to a newer version, I encountered errors that disrupted my tracking. Additionally, Umami requires a separate database container, either MySQL or Postgres, which added complexity to my setup. For a simple analytics solution, it felt like a bit too much to maintain.</p>
<h3 id="matomo-too-bloated-for-my-needs">Matomo: Too Bloated for My Needs</h3>
<p>Next up was <strong>Matomo</strong>, which was previously known as Piwik. I’ve used Matomo before, especially in environments like cPanel, but I found it to be too bloated for my use case. There are so many features, many of which I never use, that navigating through the platform often felt overwhelming. With countless options and pages to browse, it became difficult to figure out what was essential versus what was unnecessary. It’s powerful, but I just needed something much simpler.</p>
<h3 id="what-i-really-want-simple-effective-analytics">What I Really Want: Simple, Effective Analytics</h3>
<p>At this point, I realized that all I wanted was a simple tool that would tell me which pages on my website are popular, where my visitors are coming from, what devices and browsers they&rsquo;re using, and the sources that brought them there. I didn’t need extensive reports or a full-blown dashboard with complex features. I wanted basic insights without the clutter.</p>
<h3 id="why-i-chose-medama">Why I Chose Medama</h3>
<p>After further research, I finally settled on <strong><a href="https://github.com/medama-io/medama">Medama</a></strong>, and here’s why:</p>
<ul>
<li><strong>Lightweight Tracker</strong>: Medama’s simplicity is its strength. It provides just the essentials and does it well.</li>
<li><strong>SQLite Database Support</strong>: Unlike Umami, Medama uses SQLite, which is easier to manage and doesn’t require setting up a separate database container.</li>
<li><strong>Simple and Intuitive Interface</strong>: The interface is clean and easy to navigate, making it much more user-friendly than the other options I explored.</li>
</ul>
<h3 id="my-wish-for-medama">My Wish for Medama</h3>
<p>One feature I’d love to see in Medama is the ability to filter out my own browsing activity from the statistics. It would be great to ensure my personal visits to my website don’t skew the data.</p>
<h3 id="a-potential-jetpack-replacement">A Potential Jetpack Replacement?</h3>
<p>If my experience with Medama continues to be positive, I might even consider replacing Jetpack on my WordPress site. Jetpack Stats is really the only feature that keeps me using Jetpack, alongside Akismet for spam protection. If Medama proves to be a reliable and lightweight tracker, it could serve as an ideal replacement for my needs.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Building an Efficient Blogging Workflow with Hugo, Obsidian, and GitHub Pages</title>
      <link>https://deuts.org/p/build-hugo-obsidian-github-pages-workflow/</link>
      <pubDate>Wed, 13 Nov 2024 23:44:23 +0800</pubDate>
      <guid>https://deuts.org/p/build-hugo-obsidian-github-pages-workflow/</guid>
      <description>Exploring Hugo, Obsidian and Github Pages as a flexible and efficient blogging setup, focusing on low dependency and high control, with a look at potential WordPress migration challenges.</description>
      <content:encoded><![CDATA[<p>Recent controversies surrounding Matt Mullenweg and WP Engine have led me to rethink my blogging platform. While WordPress has long been a popular CMS, I’m increasingly drawn to the simplicity and control of static site generators like Hugo.</p>
<h3 id="why-consider-hugo-over-wordpress">Why Consider Hugo Over WordPress?</h3>
<p>Hugo’s performance and security benefits are difficult to ignore:</p>
<ul>
<li><strong>Performance</strong>: Hugo serves static HTML files without any backend load, delivering high-speed access.</li>
<li><strong>Security</strong>: Without a database or PHP reliance, Hugo sites inherently avoid many vulnerabilities that affect WordPress.</li>
<li><strong>Customization</strong>: Total control over templates and layouts eliminates the plugin bloat that can slow down WordPress.</li>
<li><strong>Version Control</strong>: Working with Git keeps my changes organized and easy to revert if needed.</li>
<li><strong>Low Maintenance</strong>: No frequent updates or patches—Hugo just works as-is, saving time on upkeep.</li>
</ul>
<p>Despite these advantages, I hesitated because managing content directly in Hugo, especially from the terminal, felt clunky compared to the WordPress dashboard. Using VS Code helped, but it was still missing that CMS simplicity.</p>
<h3 id="my-new-workflow-obsidian-and-hugo-with-minimal-dependencies">My New Workflow: Obsidian and Hugo with Minimal Dependencies</h3>
<p>I&rsquo;ve now found a balance that works without tying me to specific plugins that may become obsolete or unsupported. Here’s what my current workflow looks like:</p>
<ol>
<li>
<p><strong>Obsidian with Templater and Dataview Plugins</strong>:</p>
<ul>
<li>I use Obsidian for creating and editing posts, keeping my Hugo directory aligned with my Obsidian vault. With Templater, I can build posts from templates and generate shortcodes. The Dataview plugin helps me get an overview of post summaries without impacting the publishing process.</li>
<li>Notably, I’ve chosen <strong>not</strong> to use plugins like <a href="/hugo-and-obsidian-workflow/">Hugo Publish or Static Site MD Exporter</a>. Relying on such plugins could cause future complications if they’re discontinued, so I’ve kept my setup as independent as possible.</li>
</ul>
</li>
<li>
<p><strong>Building with Hugo</strong>:</p>
<ul>
<li>After editing posts, I use Hugo to generate HTML files, configured to output to a <code>docs</code> folder for simplicity.</li>
</ul>
</li>
<li>
<p><strong>Publishing to GitHub Pages</strong>:</p>
<ul>
<li>Pushing my Hugo directory, including the <code>docs</code> folder, to GitHub triggers publishing through GitHub Pages. This approach enables a completely self-managed site without relying on an external CMS.</li>
<li>If I don’t have Obsidian access, I can still edit content through GitHub’s web interface, pull the changes, run Hugo to build, and push the updated site back.</li>
</ul>
</li>
<li>
<p><strong>Direct Edit Links</strong>:</p>
<ul>
<li>For convenience, each site page includes a subtle edit button linking to the GitHub page source, making updates simple.</li>
</ul>
</li>
</ol>
<h3 id="considering-migration">Considering Migration</h3>
<p>While I’m currently set on Hugo for future posts, the complexity involved in migrating <a href="https://deuts.net/">my WordPress content</a> — nearly 900 posts and 2,500 comments — makes me pause. Migrating everything isn’t an easy task, so for now, I’m planning to blog on Hugo going forward while exploring efficient ways to gradually bring over my legacy content.</p>
<p>This workflow with Hugo, Obsidian and Github Pages has struck the right balance, letting me blog on my terms without depending on plugins or external services. Obsidian, Hugo, and GitHub all rely on Markdown, creating a seamless experience where these tools work in perfect harmony. For anyone seeking a lean, self-reliant approach to publishing, this setup might be the perfect fit.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
