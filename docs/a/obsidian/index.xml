<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Obsidian on Deuts Log</title>
    <link>https://deuts.org/a/obsidian/</link>
    <description>Recent content in Obsidian on Deuts Log</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <copyright>2024 Deuts Log</copyright>
    <lastBuildDate>Sun, 17 Nov 2024 17:49:54 +0800</lastBuildDate>
    <atom:link href="https://deuts.org/a/obsidian/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Did I Make a Mistake Trusting Resilio Sync for File Syncing?</title>
      <link>https://deuts.org/p/resilio-sync-reliability-issues/</link>
      <pubDate>Sun, 17 Nov 2024 17:49:54 +0800</pubDate>
      <guid>https://deuts.org/p/resilio-sync-reliability-issues/</guid>
      <description>After encountering a &amp;#34;No tracker connection available&amp;#34; issue, I’m reevaluating Resilio Sync’s reliability and whether my decision to use it over Syncthing was the right one.</description>
      <content:encoded><![CDATA[<p>File synchronization tools are a cornerstone of my workflow, especially for keeping my Obsidian vaults updated across devices. For a while, Resilio Sync seemed like the perfect solution. But a recent issue has me questioning whether it’s as reliable as I believed.</p>
<hr>
<h3 id="the-issue-no-tracker-connection-available">The Issue: &ldquo;No Tracker Connection Available&rdquo;</h3>
<p>Just today, I encountered an unsettling error in Resilio Sync: <strong>&ldquo;No tracker connection available.&rdquo;</strong> After a quick search, I found a <a href="https://forum.resilio.com/topic/75482-no-tracker-connection-available-and-download-configuration-file-test/">discussion in the Resilio Sync community</a> confirming that others are facing the same issue.</p>
<p>This raised several concerns:</p>
<ul>
<li>Does Resilio Sync rely on a single centralized tracker server?</li>
<li>If so, is this a critical single point of failure?</li>
<li>Can I continue trusting this service for my essential files?</li>
</ul>
<p>The more I thought about it, the more uneasy I became about relying solely on Resilio Sync.</p>
<hr>
<h3 id="why-this-is-a-problem">Why This Is a Problem</h3>
<p>Reliability is critical for any file synchronization tool. My files—and particularly my Obsidian vaults—must remain accessible, no matter what. A centralized server outage undermines this reliability, potentially leaving me unable to sync files when I need them most.</p>
<hr>
<h3 id="why-i-chose-resilio-sync-over-syncthing">Why I Chose Resilio Sync Over Syncthing</h3>
<p>I switched to Resilio Sync after experiencing some frustrations with Syncthing. Here’s why:</p>
<ol>
<li>
<p><strong>Mobile App Support:</strong></p>
<ul>
<li>Resilio Sync has a reliable Android app and an official iOS app (even though I’m not using iOS right now).</li>
<li>Syncthing’s Android app has been <a href="https://forum.syncthing.net/t/discontinuing-syncthing-android/23002">discontinued</a>, and there’s no official iOS app, which made Resilio Sync the better choice for cross-platform use.</li>
</ul>
</li>
<li>
<p><strong>User-Friendly Interface:</strong></p>
<ul>
<li>Resilio Sync offers a polished GUI, whereas I found Syncthing’s login system problematic in the past.</li>
</ul>
</li>
<li>
<p><strong>Selective Sync:</strong></p>
<ul>
<li>This feature is a game-changer for saving storage space on mobile devices and is unavailable in Syncthing.</li>
</ul>
</li>
</ol>
<p>These factors made Resilio Sync seem like the ideal solution. But today’s issue makes me wonder if I prioritized convenience over long-term reliability.</p>
<hr>
<h3 id="the-bigger-picture-can-i-trust-resilio-sync">The Bigger Picture: Can I Trust Resilio Sync?</h3>
<p>This experience highlights an important question: should I rethink my choice of file synchronization tool? While Resilio Sync offers valuable features, its potential reliance on a central tracker server feels like a vulnerability.</p>
<p>I’m now left pondering:</p>
<ul>
<li>Should I revisit Syncthing, even with its app limitations and lack of selective sync?</li>
<li>Are there other alternatives that balance reliability and functionality better?</li>
</ul>
<p>For now, I’ll be closely watching how quickly Resilio Sync resolves this issue. But one thing is certain: my trust in the platform has taken a hit.</p>
<h3 id="update-trackers-up-now">Update: Trackers Up Now</h3>
<p>After nearly 1.5 days, the trackers are finally back online. I wish Resilio Sync would provide an official announcement explaining the issue—it would go a long way in reassuring loyal users like me.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Building an Efficient Blogging Workflow with Hugo, Obsidian, and GitHub Pages</title>
      <link>https://deuts.org/p/build-hugo-obsidian-github-pages-workflow/</link>
      <pubDate>Wed, 13 Nov 2024 23:44:23 +0800</pubDate>
      <guid>https://deuts.org/p/build-hugo-obsidian-github-pages-workflow/</guid>
      <description>Exploring Hugo, Obsidian and Github Pages as a flexible and efficient blogging setup, focusing on low dependency and high control, with a look at potential WordPress migration challenges.</description>
      <content:encoded><![CDATA[<p>Recent controversies surrounding Matt Mullenweg and WP Engine have led me to rethink my blogging platform. While WordPress has long been a popular CMS, I’m increasingly drawn to the simplicity and control of static site generators like Hugo.</p>
<h3 id="why-consider-hugo-over-wordpress">Why Consider Hugo Over WordPress?</h3>
<p>Hugo’s performance and security benefits are difficult to ignore:</p>
<ul>
<li><strong>Performance</strong>: Hugo serves static HTML files without any backend load, delivering high-speed access.</li>
<li><strong>Security</strong>: Without a database or PHP reliance, Hugo sites inherently avoid many vulnerabilities that affect WordPress.</li>
<li><strong>Customization</strong>: Total control over templates and layouts eliminates the plugin bloat that can slow down WordPress.</li>
<li><strong>Version Control</strong>: Working with Git keeps my changes organized and easy to revert if needed.</li>
<li><strong>Low Maintenance</strong>: No frequent updates or patches—Hugo just works as-is, saving time on upkeep.</li>
</ul>
<p>Despite these advantages, I hesitated because managing content directly in Hugo, especially from the terminal, felt clunky compared to the WordPress dashboard. Using VS Code helped, but it was still missing that CMS simplicity.</p>
<h3 id="my-new-workflow-obsidian-and-hugo-with-minimal-dependencies">My New Workflow: Obsidian and Hugo with Minimal Dependencies</h3>
<p>I&rsquo;ve now found a balance that works without tying me to specific plugins that may become obsolete or unsupported. Here’s what my current workflow looks like:</p>
<ol>
<li>
<p><strong>Obsidian with Templater and Dataview Plugins</strong>:</p>
<ul>
<li>I use Obsidian for creating and editing posts, keeping my Hugo directory aligned with my Obsidian vault. With Templater, I can build posts from templates and generate shortcodes. The Dataview plugin helps me get an overview of post summaries without impacting the publishing process.</li>
<li>Notably, I’ve chosen <strong>not</strong> to use plugins like <a href="/hugo-and-obsidian-workflow/">Hugo Publish or Static Site MD Exporter</a>. Relying on such plugins could cause future complications if they’re discontinued, so I’ve kept my setup as independent as possible.</li>
</ul>
</li>
<li>
<p><strong>Building with Hugo</strong>:</p>
<ul>
<li>After editing posts, I use Hugo to generate HTML files, configured to output to a <code>docs</code> folder for simplicity.</li>
</ul>
</li>
<li>
<p><strong>Publishing to GitHub Pages</strong>:</p>
<ul>
<li>Pushing my Hugo directory, including the <code>docs</code> folder, to GitHub triggers publishing through GitHub Pages. This approach enables a completely self-managed site without relying on an external CMS.</li>
<li>If I don’t have Obsidian access, I can still edit content through GitHub’s web interface, pull the changes, run Hugo to build, and push the updated site back.</li>
</ul>
</li>
<li>
<p><strong>Direct Edit Links</strong>:</p>
<ul>
<li>For convenience, each site page includes a subtle edit button linking to the GitHub page source, making updates simple.</li>
</ul>
</li>
</ol>
<h3 id="considering-migration">Considering Migration</h3>
<p>While I’m currently set on Hugo for future posts, the complexity involved in migrating <a href="https://deuts.net/">my WordPress content</a> — nearly 900 posts and 2,500 comments — makes me pause. Migrating everything isn’t an easy task, so for now, I’m planning to blog on Hugo going forward while exploring efficient ways to gradually bring over my legacy content.</p>
<p>This workflow with Hugo, Obsidian and Github Pages has struck the right balance, letting me blog on my terms without depending on plugins or external services. Obsidian, Hugo, and GitHub all rely on Markdown, creating a seamless experience where these tools work in perfect harmony. For anyone seeking a lean, self-reliant approach to publishing, this setup might be the perfect fit.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Hugo and Obsidian workflow</title>
      <link>https://deuts.org/p/hugo-and-obsidian-workflow/</link>
      <pubDate>Tue, 12 Nov 2024 21:44:50 +0800</pubDate>
      <guid>https://deuts.org/p/hugo-and-obsidian-workflow/</guid>
      <description>Highlights of issues with Obsidian plugins like Hugo Publish and Static Site MD Exporter when used in a Hugo blogging workflow.</description>
      <content:encoded><![CDATA[<p>When combining Obsidian with Hugo for a streamlined blogging workflow, several plugins claim to offer an easy publishing process, but some fall short due to misalignment with Hugo’s expectations. In this post, I’ll highlight some common issues with the plugins I’ve encountered.</p>
<h2 id="the-problem-with-available-obsidian-plugins">The Problem with Available Obsidian Plugins</h2>
<h3 id="hugo-publishhttpsgithubcomkirito41ddobsidian-hugo-publish"><a href="https://github.com/kirito41dd/obsidian-hugo-publish">Hugo Publish</a></h3>
<p>One plugin that attempts to bridge the gap between Obsidian and Hugo is <strong>Hugo Publish</strong>. This plugin lets you assign tags to notes, which it then processes into Markdown files that can be used with Hugo. However, there&rsquo;s a significant flaw: if you assign a <code>blog</code> tag to your notes for processing, the plugin carries this tag over to the output <code>.md</code> files. This means that every post, when built with Hugo, will include the <code>blog</code> tag, which is not only redundant but goes against the purpose of using tags as categories or topics.</p>
<p>The problem here is that <strong>Hugo Publish</strong> does not account for the need to handle tags dynamically for each post. In Hugo, tags are often used for grouping and categorization, and repeating the same tag across all posts diminishes their value.</p>
<h3 id="static-site-md-exporterhttpsgithubcomyy4382obsidian-static-site-export"><a href="https://github.com/yy4382/obsidian-static-site-export">Static Site MD Exporter</a></h3>
<p>Another plugin, <strong>Static Site MD Exporter</strong>, offers a different approach by publishing the processed <code>.md</code> files directly to GitHub. From there, you can use <code>git pull</code> to bring them into your Hugo project and build the site.</p>
<p>This plugin offers a useful feature: by adding <code>published: true</code> in the frontmatter of a note, it marks the note for processing and publishing. However, this is where things start to break down when using Hugo. The <code>published</code> property is actually an alias for <code>publishDate</code> in Hugo, which expects a date value, not a boolean. As a result, when you run the <code>hugo</code> build command, Hugo throws an error because it cannot interpret <code>published: true</code> correctly.</p>
<hr>
<h2 id="summary">Summary</h2>
<p>Both the <strong>Hugo Publish</strong> and <strong>Static Site MD Exporter</strong> plugins offer valuable functionality, but they fall short in handling tags and frontmatter properties according to Hugo’s conventions. The inability of these plugins to properly manage <code>publishDate</code> and <code>tags</code> leads to errors when building the Hugo site and creates unnecessary redundancy in post tags. These are important issues that need to be addressed in order for the workflow to function smoothly with Hugo.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
